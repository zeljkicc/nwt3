@model Projekat3_NWT.Models.Property

@{
    ViewBag.Title = "Create";
}

<h2>List a Property</h2>


@using (Html.BeginForm("Create", "Property",FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Here you can list a property to rent or sell it</h4>

        <h4 class="label-danger">@ViewBag.ErrorMessage</h4>
        <hr />

        <div class="row">
            <div class="col-md-2"></div>
            <div class="col-md-8">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <ul class="nav nav-pills margin-bottom-10px">
                    <li class="active"><a data-toggle="pill" href="#home">1. Basic Details</a></li>
                    <li><a data-toggle="pill" href="#menu1" id="pill-address">2. Address</a></li>
                    <li><a data-toggle="pill" href="#menu2">3. Property Images</a></li>
                </ul>

                <div class="tab-content">





                    <div id="home" class="tab-pane fade in active">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Type, ViewData["TypeOfPropertyItems"] as SelectList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NumberOfRooms, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>


                            

                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.AvailableFor, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.AvailableFor, ViewData["AvailableForItems"] as SelectList, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NumberOfRooms, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.SquareMeters, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.SquareMeters, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.SquareMeters, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (User.IsInRole("Admin") || User.IsInRole("Agent"))
                        {
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.Label("Owner", htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(m => m.Owner.Id, ViewData["UserItems"] as SelectList, new { @class = "form-control" })
                                    </div>
                                </div>
                             </div>
                         </div>
                        }

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.NumberOfRooms, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.NumberOfRooms, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NumberOfRooms, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.NumberOfBedRooms, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.NumberOfBedRooms, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NumberOfBedRooms, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.NumberOfBathRooms, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.NumberOfBathRooms, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NumberOfBathRooms, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                           <div class="col-md-12">
                                @Html.LabelFor(model => model.AvailableFrom, htmlAttributes: new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.AvailableFrom, new { @class = "form-control datefield", type = "date" })
                                @Html.ValidationMessageFor(model => model.AvailableFrom, "", new { @class = "text-danger" })
                            </div> 
                           
                            </div>



                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.StoryNumber, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.StoryNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.StoryNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.TotalNumberOfStories, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.TotalNumberOfStories, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TotalNumberOfStories, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.DescriptionLong, htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.DescriptionLong, new { @class = "form-control", rows = 5, placeholder = "Long Description" })
                                @Html.ValidationMessageFor(model => model.DescriptionLong, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.DescriptionShort, htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.DescriptionShort, new { @class = "form-control", rows = 2, placeholder = "Short Description" })
                                @Html.ValidationMessageFor(model => model.DescriptionShort, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.TypeOfHeating, htmlAttributes: new { @class = "control-label" })                            
                                @Html.EditorFor(model => model.TypeOfHeating, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TypeOfHeating, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-inline text-center">
                            <div class="panel panel-default">
                                <div class="panel-body">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ParkingPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.ParkingPlace)
                                                @Html.ValidationMessageFor(model => model.ParkingPlace, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>



                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Elevator, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.Elevator)
                                                @Html.ValidationMessageFor(model => model.Elevator, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CameraSystem, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.CameraSystem)
                                                @Html.ValidationMessageFor(model => model.CameraSystem, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.InterPhone, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.InterPhone)
                                                @Html.ValidationMessageFor(model => model.InterPhone, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Furnished, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.Furnished)
                                                @Html.ValidationMessageFor(model => model.Furnished, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>



                                </div>
                            </div>
                        </div>


                            </div>
                            <div id="menu1" class="tab-pane fade">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Address.State, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Address.State, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address.State, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Address.Street, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address.Street, "", new { @class = "text-danger" })
                                    </div>
                                </div>



                                <div class="form-group">
                                    <div class="col-md-12">
                                        @Html.LabelFor(model => model.Address.ZipCode, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Address.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Address.ZipCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @Html.Label("Set Location", htmlAttributes: new { @class = "control-label" })
                                <div class="panel panel-default">
                                    <div class="panel-body">
                                        <div id="map" style="height: 400px"></div>
                                    </div>
                                </div>



                            </div>
                    <div id="menu2" class="tab-pane fade">

                        <div class="panel panel-default">
                            <div class="panel-body">
                                <label class="btn btn-primary" for="file1">
                                    <input id="file1" type="file" name="files" style="display:none;" onchange="$('#upload-file-info1').html($(this).val());">
                                    Browse
                                </label>
                                <span class='label label-default' id="upload-file-info1"></span>
                            </div>
                        </div>


                        <div class="panel panel-default">
                            <div class="panel-body">
                                <label class="btn btn-primary" for="file2">
                                    <input id="file2" type="file" name="files" style="display:none;" onchange="$('#upload-file-info2').html($(this).val());">
                                    Browse
                                </label>
                                <span class='label label-default' id="upload-file-info2"></span>
                            </div>
                        </div>

                        <div class="panel panel-default">
                            <div class="panel-body">
                                <label class="btn btn-primary" for="file3">
                                    <input id="file3" type="file" name="files" style="display:none;" onchange="$('#upload-file-info3').html($(this).val());">
                                    Browse
                                </label>
                                <span class='label label-default' id="upload-file-info3"></span>
                            </div>
                        </div>

                        <div class="panel panel-default">
                            <div class="panel-body">
                                <label class="btn btn-primary" for="file4">
                                    <input id="file4" type="file" name="files" style="display:none;" onchange="$('#upload-file-info4').html($(this).val());">
                                    Browse
                                </label>
                                <span class='label label-default' id="upload-file-info4"></span>
                            </div>
                        </div>

                        <div class="panel panel-default">
                            <div class="panel-body">
                                <label class="btn btn-primary" for="file5">
                                    <input id="file5" type="file" name="files" style="display:none;" onchange="$('#upload-file-info5').html($(this).val());">
                                    Browse
                                </label>
                                <span class='label label-default' id="upload-file-info5"></span>
                            </div>
                        </div>
                    </div>
                        </div>

                @Html.HiddenFor(model => model.Address.Lat)
                @Html.HiddenFor(model => model.Address.Lon)

                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" value="Submit" class="btn btn-primary btn-block" />
                    </div>
                </div>
            </div>
            <div class="col-md-2"></div>
        </div>
    </div>

}




<hr />


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
